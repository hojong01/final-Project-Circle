<?xml version="1.0" encoding="UTF-8" ?>

<!-- DTD 선언 -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="poll">

	<!-- 설문 결과 조회 -->
	<select id="getResult" parameterType="map" resultMap="getMap">
		select * form poll_post_qust where false
	</select>
	<resultMap type="hashMap" id="getMap"></resultMap>
	
	<!-- 홈 설문 목록 조회 -->
	<select id="homeList" parameterType="String" resultMap="homeMap">
    select  <![CDATA[ ROWNUM ]]>
          , poll_post_code
          , POLL_POST_NAME
          , POLL_POST_SEC
          , POLL_POST_SDAT
          , POLL_POST_EDAT   
          , POLL_POST_CLOSING
          , POLL_POST_QUST_ANSW_join_emp
          , EMP_INFO_NAME
          , JOB_INFO_NAME		
       from (select  poll_post_code
                   , POLL_POST_NAME
                   , POLL_POST_SEC
                   , to_char(POLL_POST_SDAT, 'YYYY-MM-DD') as POLL_POST_SDAT
                   , to_char(POLL_POST_EDAT, 'YYYY-MM-DD') as POLL_POST_EDAT 
                   , POLL_POST_CLOSING  
                   , count(POLL_POST_QUST_ANSW_join_emp) as POLL_POST_QUST_ANSW_join_emp
                   , EMP_INFO_NAME
                   , JOB_INFO_NAME
                from poll_post
                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
                join emp_info on (poll_post_emp = emp_info_emp_no)
                join job_info on (emp_info_job_code = job_info_code)
                join poll_post_join on (poll_post_code = poll_join_post)
               where poll_post_stat = 'Y'
                 and poll_join_emp = #{empNo}
            group by poll_post_code          
                   , POLL_POST_NAME
                   , POLL_POST_SEC
                   , POLL_POST_SDAT
                   , POLL_POST_EDAT
                   , POLL_POST_CLOSING
                   , EMP_INFO_NAME
                   , JOB_INFO_NAME)
      where <![CDATA[ ROWNUM <= 10 ]]>
	</select>
	<resultMap type="hashMap" id="homeMap">
	</resultMap>
	
	<!-- 진행중인 설문 총 개수 조회(검색 적용) -->
	<select id="countTotalProgressPost"  parameterType="pagination" resultType="int">
		select count(1) as cnt
		  from (select count(poll_post_code)
		                from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		                join emp_info on (poll_post_emp = emp_info_emp_no)
		                join job_info on (emp_info_job_code = job_info_code)
		                join poll_post_join on (poll_post_code = poll_join_post)
		               where poll_post_stat = 'Y'
		                 and poll_join_emp = #{empNo}
		                 and poll_join_type = '참여'
		                 and <![CDATA[ poll_post_sdat <= sysdate ]]>
               			 and <![CDATA[ poll_post_edat >= sysdate ]]>
		                 and nvl(POLL_POST_CLOSING, 'N') ^= 'Y'
		                 and poll_post_name like '%${searchTitle}%'
           				 and emp_info_name like '%${searchWriter}%'
		            group by poll_post_code)
	</select>

	<!-- 진행중인 설문 조회(페이지/검색 적용) -->	
	<select id="progressList" parameterType="pagination" resultMap="progressMap">
   		 select X.rnum
		      , X.poll_post_code
		      , X.POLL_POST_NAME
		      , X.POLL_POST_SEC
		      , X.POLL_POST_SDAT
		      , X.POLL_POST_EDAT   
		      , X.POLL_POST_CLOSING
		      , X.POLL_POST_QUST_ANSW_join_emp
		      , X.EMP_INFO_NAME
		      , X.JOB_INFO_NAME	
		   from (select ROWNUM rnum
		          , A.poll_post_code
		          , A.POLL_POST_NAME
		          , A.POLL_POST_SEC
		          , A.POLL_POST_SDAT
		          , A.POLL_POST_EDAT   
		          , A.POLL_POST_CLOSING
		          , A.POLL_POST_QUST_ANSW_join_emp
		          , A.EMP_INFO_NAME
		          , A.JOB_INFO_NAME		
		       from (select  poll_post_code
		                   , POLL_POST_NAME
		                   , POLL_POST_SEC
		                   , to_char(POLL_POST_SDAT, 'YYYY-MM-DD') as POLL_POST_SDAT
		                   , to_char(POLL_POST_EDAT, 'YYYY-MM-DD') as POLL_POST_EDAT 
		                   , POLL_POST_CLOSING  
		                   , count(POLL_POST_QUST_ANSW_join_emp) as POLL_POST_QUST_ANSW_join_emp
		                   , EMP_INFO_NAME
		                   , JOB_INFO_NAME
		                from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		                join emp_info on (poll_post_emp = emp_info_emp_no)
		                join job_info on (emp_info_job_code = job_info_code)
		                join poll_post_join on (poll_post_code = poll_join_post)
		               where poll_post_stat = 'Y'
		                 and poll_join_emp = #{empNo}
		                 and <![CDATA[ poll_post_sdat <= sysdate ]]>
	                 	 and <![CDATA[ poll_post_edat >= sysdate ]]>
		                 and nvl(POLL_POST_CLOSING, 'N') ^= 'Y'
		                 and poll_post_name like '%${searchTitle}%'
               		 	 and emp_info_name like '%${searchWriter}%'
		            group by poll_post_code          
		                   , POLL_POST_NAME
		                   , POLL_POST_SEC
		                   , POLL_POST_SDAT
		                   , POLL_POST_EDAT
		                   , POLL_POST_CLOSING
		                   , EMP_INFO_NAME
		                   , JOB_INFO_NAME) A
		        where <![CDATA[ rownum <=]]>#{end}) X 
	<![CDATA[ where X.rnum >= ]]>#{start}
	</select>
	<resultMap type="hashMap" id="progressMap"></resultMap>
	
	<!-- 마감된 설문 총 개수 조회(검색 적용) -->
	<select id="countTotalFinishedPost"  parameterType="pagination" resultType="int">
		select count(1) as cnt
		  from (select count(poll_post_code)
		                from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		                join emp_info on (poll_post_emp = emp_info_emp_no)
		                join job_info on (emp_info_job_code = job_info_code)
		                join poll_post_join on (poll_post_code = poll_join_post)
		               where poll_post_stat = 'Y'
		                 and poll_join_emp = #{empNo}
		                 and <![CDATA[ poll_post_sdat <= sysdate ]]>
               			 and <![CDATA[ poll_post_edat < sysdate ]]> 
               			 and nvl(POLL_POST_CLOSING, 'N') ^= 'Y'
		                 and poll_post_name like '%${searchTitle}%'
           				 and emp_info_name like '%${searchWriter}%'
		            group by poll_post_code)
	</select>
	
	<!-- 마감된 설문 조회(페이지/검색 적용) -->	
	<select id="finishedList" parameterType="pagination" resultMap="finishedMap">
		 select X.rnum
		      , X.poll_post_code
		      , X.POLL_POST_NAME
		      , X.POLL_POST_SEC
		      , X.POLL_POST_SDAT
		      , X.POLL_POST_EDAT   
		      , X.POLL_POST_CLOSING
		      , X.POLL_POST_QUST_ANSW_join_emp
		      , X.EMP_INFO_NAME
		      , X.JOB_INFO_NAME	
		   from (select ROWNUM rnum
		          , A.poll_post_code
		          , A.POLL_POST_NAME
		          , A.POLL_POST_SEC
		          , A.POLL_POST_SDAT
		          , A.POLL_POST_EDAT   
		          , A.POLL_POST_CLOSING
		          , A.POLL_POST_QUST_ANSW_join_emp
		          , A.EMP_INFO_NAME
		          , A.JOB_INFO_NAME		
		       from (select  poll_post_code
		                   , POLL_POST_NAME
		                   , POLL_POST_SEC
		                   , to_char(POLL_POST_SDAT, 'YYYY-MM-DD') as POLL_POST_SDAT
		                   , to_char(POLL_POST_EDAT, 'YYYY-MM-DD') as POLL_POST_EDAT 
		                   , POLL_POST_CLOSING  
		                   , count(POLL_POST_QUST_ANSW_join_emp) as POLL_POST_QUST_ANSW_join_emp
		                   , EMP_INFO_NAME
		                   , JOB_INFO_NAME
		                from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		                join emp_info on (poll_post_emp = emp_info_emp_no)
		                join job_info on (emp_info_job_code = job_info_code)
		                join poll_post_join on (poll_post_code = poll_join_post)
		               where poll_post_stat = 'Y'
		                 and poll_join_emp = #{empNo}
		                 and <![CDATA[ poll_post_sdat <= sysdate ]]>
	                 	 and <![CDATA[ poll_post_edat < sysdate ]]>
		                 and nvl(POLL_POST_CLOSING, 'N') ^= 'Y'
		                 and POLL_POST_SEC = 'Y'
		                 and poll_post_name like '%${searchTitle}%'
               		 	 and emp_info_name like '%${searchWriter}%'
		            group by poll_post_code          
		                   , POLL_POST_NAME
		                   , POLL_POST_SEC
		                   , POLL_POST_SDAT
		                   , POLL_POST_EDAT
		                   , POLL_POST_CLOSING
		                   , EMP_INFO_NAME
		                   , JOB_INFO_NAME) A
		        where <![CDATA[ rownum <=]]>#{end}) X 
	<![CDATA[ where X.rnum >= ]]>#{start}
	</select>
	<resultMap type="hashMap" id="finishedMap"></resultMap>
	
	<!-- 내 설문 총 개수 조회(검색 적용) -->
	<select id="countTotalMyPost"  parameterType="pagination" resultType="int">
		select count(1) as cnt
		  from (select count(poll_post_code)
		                from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		           left join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		                join poll_post_join on (poll_post_code = poll_join_post)
		               where poll_post_stat = 'Y'
		                 and poll_post_emp = #{empNo}
		                 and poll_post_name like '%${searchTitle}%'
		            group by poll_post_code)
	</select>
	
	<!-- 내 설문 조회(페이지/검색 적용) -->	
	<select id="myList" parameterType="pagination" resultMap="myMap">
		 select X.rnum
		      , X.poll_post_code
		      , X.POLL_POST_NAME
		      , X.POLL_POST_SDAT
		      , X.POLL_POST_EDAT   
		      , X.POLL_POST_CLOSING
		      , X.join_count
           from (select ROWNUM rnum
		          , A.poll_post_code
		          , A.POLL_POST_NAME
		          , A.POLL_POST_SDAT
		          , A.POLL_POST_EDAT   
		          , A.POLL_POST_CLOSING
		          , A.join_count
               from (select  poll_post_code
		                   , POLL_POST_NAME
		                   , to_char(POLL_POST_SDAT, 'YYYY-MM-DD') as POLL_POST_SDAT
		                   , to_char(POLL_POST_EDAT, 'YYYY-MM-DD') as POLL_POST_EDAT 
		                   , POLL_POST_CLOSING  
		                   , count(distinct POLL_POST_QUST_ANSW_JOIN_EMP) as join_count
                        from poll_post
		                join POLL_POST_QUST_ANSW on (poll_post_code = POLL_POST_QUST_ANSW_POST)
		                join poll_post_qust_answ_join on (POLL_POST_QUST_ANSW_code = POLL_POST_QUST_ANSW_join_code and POLL_POST_QUST_ANSW_join_emp = #{empNo})
		               where poll_post_stat = 'Y'
		                 and poll_post_emp =#{empNo}
		                 and poll_post_name like '%${searchTitle}%'
		            group by poll_post_code          
		                   , POLL_POST_NAME
		                   , POLL_POST_SDAT
		                   , POLL_POST_EDAT
		                   , POLL_POST_CLOSING
                           , POLL_POST_QUST_ANSW_JOIN_EMP) A
                where <![CDATA[ rownum <=]]>#{end}) X 
	<![CDATA[ where X.rnum >= ]]>#{start}
	</select>
	<resultMap type="hashMap" id="myMap"></resultMap>
		
	<select id="getQuestion" parameterType="map" resultMap="questionMap">
		 select poll_post_name
 		      , POLL_POST_EMP
		      , emp_info_name
		      , job_info_name
		      , poll_post_wdat
		      , poll_post_sdat
		      , poll_post_edat
		      , POLL_POST_CLOSING
		      , poll_post_mod_admt
		      , poll_post_sec
		      , poll_post_cont
		      , poll_post_qust_code
		      , poll_post_qust_cont
		      , poll_post_qust_type
		      , poll_post_qust_lowtype
		      , POLL_POST_QUST_NECESS
		      , POLL_POST_QUST_LIMIT
		      , poll_post_qust_answ_code
		      , poll_post_qust_answ_type
		      , poll_post_qust_answ_cont
		      , count(POLL_POST_QUST_ANSW_JOIN_EMP) as answerAttend
		   from poll_post
		   join emp_info on (poll_post_emp = emp_info_emp_no)
		   join job_info on (EMP_INFO_JOB_CODE = JOB_INFO_CODE)
		   join poll_post_qust on (poll_post_code = poll_post_qust_post)
		   join poll_post_qust_answ on (poll_post_qust_code = poll_post_qust_answ_qust)
		   full outer join poll_post_qust_answ_join on (poll_post_qust_answ_code = POLL_POST_QUST_ANSW_JOIN_CODE)
		  where poll_post_code = #{postCode}
		  group by(poll_post_name
  		      , POLL_POST_EMP
		      , emp_info_name
		      , job_info_name
		      , poll_post_wdat
		      , poll_post_sdat
		      , poll_post_edat
		      , POLL_POST_CLOSING
		      , poll_post_mod_admt
		      , poll_post_sec
		      , poll_post_cont
		      , poll_post_qust_code
		      , poll_post_qust_cont
		      , poll_post_qust_type
		      , poll_post_qust_lowtype
		      , POLL_POST_QUST_NECESS
		      , POLL_POST_QUST_LIMIT
		      , poll_post_qust_answ_code
		      , poll_post_qust_answ_type
		      , poll_post_qust_answ_cont)
		 order by POLL_POST_QUST_CODE
	</select>
	<resultMap type="hashMap" id="questionMap"></resultMap>
		
	<select id="getTotalAttend" parameterType="map" resultType="int">
		select count(POLL_JOIN_EMP)
		  from POLL_POST_JOIN
		 where POLL_JOIN_POST = #{postCode}
		   and POLL_JOIN_TYPE = '참여'
		 group by POLL_JOIN_POST
	</select>
	
	<select id="getRealAttend" parameterType="map" resultType="int">
		SELECT COUNT(POLL_POST_QUST_ANSW_JOIN_EMP)
		  FROM (SELECT DISTINCT(POLL_POST_QUST_ANSW_JOIN_EMP)
		  		  FROM (SELECT POLL_POST_QUST_ANSW_JOIN_EMP
				          FROM POLL_POST
				          JOIN POLL_POST_QUST_ANSW ON (POLL_POST_CODE = POLL_POST_QUST_ANSW_POST)
				          LEFT JOIN POLL_POST_QUST_ANSW_JOIN ON (POLL_POST_QUST_ANSW_CODE = POLL_POST_QUST_ANSW_JOIN_CODE)
				         WHERE poll_post_code = #{postCode}))
	</select>
	
	<select id="getQustRealAttend" parameterType="map" resultMap="qustAttendMap">
		 select poll_post_qust_code
		      , count(distinct POLL_POST_QUST_ANSW_JOIN_EMP) as QustRealAttend
		   from poll_post
		   join emp_info on (poll_post_emp = emp_info_emp_no)
		   join job_info on (EMP_INFO_JOB_CODE = JOB_INFO_CODE)
		   join poll_post_qust on (poll_post_code = poll_post_qust_post)
		   join poll_post_qust_answ on (poll_post_qust_code = poll_post_qust_answ_qust)
		   full outer join poll_post_qust_answ_join on (poll_post_qust_answ_code = POLL_POST_QUST_ANSW_JOIN_CODE)
		  where poll_post_code = #{postCode}
		  group by( poll_post_qust_code)
		 order by POLL_POST_QUST_CODE
	</select>
	<resultMap type="hashMap" id="qustAttendMap"></resultMap>
	
	<select id="userInfo" parameterType="String" resultMap="userInfoMap">
		select dept_info_name
		  from emp_info
		  join dept_info on (EMP_INFO_DEPT_CODE = dept_info_code)
		 where emp_info_emp_no = #{empNo}
	</select>
	<resultMap type="hashMap" id="userInfoMap"></resultMap>
</mapper>